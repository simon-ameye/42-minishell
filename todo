TODO

- refaire le getwords pour au il divise correctement a>b et cat a > > b
- poursuivre getfds
- historique
- C-c, C-v, C-\

- chevron perd siginfication into both s and d quotes
- dollar  perd signification into s quotes

____________________________________________
TESTS

cat | cat | ls
cat < Makefile > out | grep all
cd / | cd /

Warning ! ouble auotes from env expand should be kept, ex :
arg='"hello"'
<echo $arg> should return  <"hello">
I hope that : execve(ECHOPATH, {["arg"], [], []}) returns "hello"
<asxsax asx as sx| dkmsc | sx |> bugue !!

var='<'
echo $var file

cat < bar | echo "<" | cat <  | echo < bar
___________________________________________


digraph G
{

    subgraph cluster_lexer
    {
        label = "LEXER\n";
        
        l1 [label="GET_PROCS :\ncreate `t_proc` array (nb of pipes + 1)\n"]
        l2 [label="GET_TOKENS : \nDetect words thx to spaces and quotes \n Do not removes quotes"]
    }

    subgraph cluster_parser
    {
        label = "PARSER\nIretates upon `procs` and `tokens`";
        p1 [label="GET_TOKEN_TYPE : \nDetect word, '<', word following '<'... < \n"]
        p2 [label="DOLLAR_EXPAND :\nreplace $text by value in env\nSet token IS_EXPENDED to avoid redirecting expended <\n"]
        p3 [label="REMOVE_QUOTES : \nUOTEsRemove quotes)"]
        p4 [label="GET_FDs :\nOoen + parse files names\n Open all files, set FDs in tokens\n"]
        p5 [label="GET_FUNCTION_TYPE : \ndetect function : 0 for execve, 1 for echo...\n"]
        p6 [label="GET_PATH : \ndetect function path\n only for 0 execve\n"]
    }
    
        subgraph cluster_exec
    {
        label = "EXEC\nExecute functions";
        x0 [label="CREATE_PIPES : \nCreate table of pipes\nSet stream_in and stream_out for procs n and n+1\nSet first proc stream input to 0 and last stream output to 1\n(Pipe() + copy ints in procs)"]
        x1 [label="CREATE_CHILDS : \nLaunch continues in forks or in father based on number of procs and ftype\n(Fork())"]
        x2 [label="REDIRECT_IO : \nMaybe there is redirect ? Redirects IO based on Imput and Output (for Childs only)\nClose useless fd\n(Dup2)"]
        x3 [label="EXEC_PROC :\nBased of ftype, launches BUILD_IN or EXEC_PROGRAM\n"]
        x33 [label="BUILD_IN :\nAny build in\n"]
        x4 [label="EXEC_PROGRAM : \nSets the args according to execve requirements and launches(Execve)"]
        x5 [label="WAIT_CHILDS :\nWaits childs and closes fds\n(Loop of WaitPID)"]
    }

        process_data [label="PROCESS_DATA\n\
        string\n\
        tab of tokens\n\
        path (as requested by execve)\n\
        func_type\n\
        fd_in\n\
        fd_out\n\
        stream_in\n\
        stream_out\n\
        is_last\n\
        
        tokens [label="TOKENS\n\
        Null terminated pointer tab\l\
        char    *word\l\
        int     *is_expanded\l\
        \n\
        "]

    l1 -> l2 -> p1
    p1 -> p2 -> p3 ->p4 -> p5 -> p6
    p6 -> x0
    x0 ->x1 -> x2 -> x3 -> x4 -> x5
    x3 -> x33
    process_data -> tokens
}